name: Test
env:
  WP_FOLDER: "/tmp/wordpress"
  TOOLS_FOLDER: "~/tools"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: File list
      run: ls

    - name: Print working directory
      run: pwd

    - name: Echo HOME
      run: echo $HOME

#    - name: mkdir wp folder
#      run: mkdir -p ${{env.WP_FOLDER}}

    - name: Install WP-CLI
      run: |
        mkdir ${{env.TOOLS_FOLDER}}
        # install wp-cli in the `tools` folder
        wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -P ${{env.TOOLS_FOLDER}}
        chmod +x ${{env.TOOLS_FOLDER}}/wp-cli.phar && mv ${{env.TOOLS_FOLDER}}/wp-cli.phar ${{env.TOOLS_FOLDER}}/wp
        # append the `tools` folder to the PATH
        export PATH=$PATH:${{env.TOOLS_FOLDER}}
        # prepend the `vendor/bin` folder to the PATH
        export PATH=vendor/bin:$PATH
        wp --info
        cd ${{env.TOOLS_FOLDER}}
        # pwd
        # ls
        echo $PATH

    - name: WP-CLI info from current working dir
      run: wp --info

    - name: Ls
      run: ls



#    - name: mysql
#      run: |
#        sudo systemctl start mysql.service
#        mysql -v

#    - name: Validate composer.json and composer.lock
#      run: composer validate --strict

#    - name: Cache Composer packages
#      id: composer-cache
#      uses: actions/cache@v2
#      with:
#        path: vendor
#        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-php-

#    - name: Install dependencies
#      run: composer install --prefer-dist --no-progress --no-suggest

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
